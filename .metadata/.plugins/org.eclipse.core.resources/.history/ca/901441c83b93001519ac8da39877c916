import java.util.Arrays;

public class Selection_sort_test {
	public static int[] selectionSort(int[] a){
		/* a[0] to a[n-1] is the array to sort */
		int temp = 0;
		int iMin = 0;
		// advance the position through the entire array
		// (could do j < n-1 because single element is also min element)
		for (int j = 0; j < a.length-1; j++) {
		/* find the min element in the unsorted a[j .. n-1] */
		/* assume the min is the first element */
		iMin = j;
		/* test against elements after j to find the smallest */
		for ( int i = j+1; i < a.length; i++) {
		/* if this element is less, then it is the new minimum */
		if (a[i] < a[iMin]) {
		/* found new minimum; remember its index */
		iMin = i;
		}
		}
		/* iMin is the index of the minimum element.
		Swap it with the current position */
		if ( iMin != j ) {
		//swap the elements!
		temp = a[j];
		a[j] = a[iMin];
		a[iMin] = temp;
		}
		}
		return a;
		}
	
	public static void main(String[] args) {
		int[] a = {4,5,2,6,7,8,8,4,6};
		System.out.println(Arrays.toString(selectionSort(a)));
	}
	

}
