import java.util.Arrays;

public class Quick_Sort {

	static int partition(int[] a, int l, int r) {
		int randIndex = (int) (Math.random() * (r - l) + l);

		int temp = a[r];
		a[r] = a[randIndex];
		a[randIndex] = temp;

		int k = l - 1;
		int pivot = a[r];

		for (int i = l; i <= r; i++) {
			if (a[i] <= pivot) {
				k++;

				temp = a[i];
				a[i] = a[k];
				a[k] = temp;
			}
		}

		return k;
	}

	static void quickSort(int[] a, int l, int r) {
		if (l >= r) {
			return;
		}

		int k = partition(a, l, r);
		quickSort(a, l, k - 1);
		quickSort(a, k + 1, r);
	}

	public static void main(String[] args) {
		int[] array = { 4, 1, 3, 2, 4, 5, 6, 4, 6, 7, 4, 1, 6, 7, 4, 2, 5, 7 };
		quickSort(array, 0, array.length - 1);

		System.out.println(Arrays.toString(array));
	}
}
